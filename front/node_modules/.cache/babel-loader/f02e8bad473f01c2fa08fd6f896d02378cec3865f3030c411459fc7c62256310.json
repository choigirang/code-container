{"ast":null,"code":"var _jsxFileName = \"/Users/choegilang/Documents/GitHub/code-container/src/components/common/StackList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { styled } from \"styled-components\";\nimport { frontend, backend } from \"../../constant/stackList\";\nimport { useDispatch } from \"react-redux\";\nimport { selectStack } from \"../../redux/actions/stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StackList() {\n  _s();\n  const frontStack = frontend;\n  const backStack = backend;\n  const dispatch = useDispatch();\n\n  // redux 선택한 stack 저장하기\n  const handleSelectStack = stack => {\n    dispatch(selectStack(stack));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(DividStack, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"FRONTEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), Object.keys(frontStack).map(stack => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelectStack(stack),\n        children: frontStack[stack]\n      }, stack, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"BACKEND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), Object.keys(backStack).map(stack => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => handleSelectStack(stack),\n      children: backStack[stack]\n    }, stack, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(StackList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = StackList;\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  color: white;\n  border-right: solid 3px rgba(255, 255, 255, 0.4);\n`;\n_c2 = Container;\nconst DividStack = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c3 = DividStack;\nconst Title = styled.p``;\n_c4 = Title;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StackList\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"DividStack\");\n$RefreshReg$(_c4, \"Title\");","map":{"version":3,"names":["React","styled","frontend","backend","useDispatch","selectStack","jsxDEV","_jsxDEV","StackList","_s","frontStack","backStack","dispatch","handleSelectStack","stack","Container","children","DividStack","Title","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","_c","div","_c2","_c3","p","_c4","$RefreshReg$"],"sources":["/Users/choegilang/Documents/GitHub/code-container/src/components/common/StackList.tsx"],"sourcesContent":["import React from \"react\";\nimport { styled } from \"styled-components\";\nimport { frontend, backend } from \"../../constant/stackList\";\nimport { useDispatch } from \"react-redux\";\nimport { selectStack } from \"../../redux/actions/stack\";\n\nexport default function StackList() {\n  const frontStack = frontend;\n  const backStack = backend;\n  const dispatch = useDispatch();\n\n  // redux 선택한 stack 저장하기\n  const handleSelectStack = (stack: string) => {\n    dispatch(selectStack(stack));\n  };\n  return (\n    <Container>\n      {/* 프론트엔드 목록 */}\n      <DividStack>\n        <Title>FRONTEND</Title>\n        {Object.keys(frontStack).map((stack) => (\n          <li key={stack} onClick={() => handleSelectStack(stack)}>\n            {frontStack[stack]}\n          </li>\n        ))}\n      </DividStack>\n      {/* 백엔드 목록 */}\n      <Title>BACKEND</Title>\n      {Object.keys(backStack).map((stack) => (\n        <li key={stack} onClick={() => handleSelectStack(stack)}>\n          {backStack[stack]}\n        </li>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  color: white;\n  border-right: solid 3px rgba(255, 255, 255, 0.4);\n`;\n\nconst DividStack = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.p``;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,QAAQ,EAAEC,OAAO,QAAQ,0BAA0B;AAC5D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,UAAU,GAAGR,QAAQ;EAC3B,MAAMS,SAAS,GAAGR,OAAO;EACzB,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMS,iBAAiB,GAAIC,KAAa,IAAK;IAC3CF,QAAQ,CAACP,WAAW,CAACS,KAAK,CAAC,CAAC;EAC9B,CAAC;EACD,oBACEP,OAAA,CAACQ,SAAS;IAAAC,QAAA,gBAERT,OAAA,CAACU,UAAU;MAAAD,QAAA,gBACTT,OAAA,CAACW,KAAK;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACtBC,MAAM,CAACC,IAAI,CAACd,UAAU,CAAC,CAACe,GAAG,CAAEX,KAAK,iBACjCP,OAAA;QAAgBmB,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAACC,KAAK,CAAE;QAAAE,QAAA,EACrDN,UAAU,CAACI,KAAK;MAAC,GADXA,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eAEbf,OAAA,CAACW,KAAK;MAAAF,QAAA,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACrBC,MAAM,CAACC,IAAI,CAACb,SAAS,CAAC,CAACc,GAAG,CAAEX,KAAK,iBAChCP,OAAA;MAAgBmB,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAACC,KAAK,CAAE;MAAAE,QAAA,EACrDL,SAAS,CAACG,KAAK;IAAC,GADVA,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAACb,EAAA,CA7BuBD,SAAS;EAAA,QAGdJ,WAAW;AAAA;AAAAuB,EAAA,GAHNnB,SAAS;AA+BjC,MAAMO,SAAS,GAAGd,MAAM,CAAC2B,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARId,SAAS;AAUf,MAAME,UAAU,GAAGhB,MAAM,CAAC2B,GAAI;AAC9B;AACA;AACA;AACA,CAAC;AAACE,GAAA,GAJIb,UAAU;AAMhB,MAAMC,KAAK,GAAGjB,MAAM,CAAC8B,CAAE,EAAC;AAACC,GAAA,GAAnBd,KAAK;AAAA,IAAAS,EAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}