{"ast":null,"code":"var _jsxFileName = \"/Users/choegilang/Documents/GitHub/code-container/src/components/common/StackList.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { styled } from \"styled-components\";\nimport { frontend, backend } from \"../../constant/stackList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectStack } from \"../../redux/actions/stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StackList() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [selectedStack, setSelectedStack] = useState(\"\");\n  _s(useEffect(_s(() => {\n    _s();\n    const stack = useSelector(state => state.stack.stack);\n    setSelectedStack(stack);\n  }, \"Nl0eb9qOGqvOrIze7novKhauxF0=\", false, function () {\n    return [useSelector];\n  }), []), \"Nl0eb9qOGqvOrIze7novKhauxF0=\", false, function () {\n    return [useSelector];\n  });\n\n  // 스택 모음\n  const frontStack = frontend;\n  const backStack = backend;\n\n  // 스택 선택\n  const dispatch = useDispatch();\n\n  // redux 선택한 stack 저장하기\n  const handleSelectStack = stack => {\n    dispatch(selectStack(stack));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"FRONTEND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DividStack, {\n      children: Object.keys(frontStack).map(stack => /*#__PURE__*/_jsxDEV(StackItem, {\n        onClick: () => handleSelectStack(stack),\n        stack: selectedStack === stack,\n        children: frontStack[stack]\n      }, stack, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"BACKEND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DividStack, {\n      children: Object.keys(backStack).map(stack => /*#__PURE__*/_jsxDEV(StackItem, {\n        onClick: () => handleSelectStack(stack),\n        stack: selectedStack === stack,\n        children: backStack[stack]\n      }, stack, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s2(StackList, \"RXPe9bwOwCHi/C5fQWJcQJaaEoM=\", false, function () {\n  return [useDispatch];\n});\n_c = StackList;\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  color: white;\n  border-right: solid 3px rgba(255, 255, 255, 0.4);\n`;\n_c2 = Container;\nconst DividStack = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c3 = DividStack;\nconst Title = styled.p`\n  width: 100%;\n  height: 30px;\n  padding: 20px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  letter-spacing: 2px;\n  font-size: 21px;\n  font-weight: bold;\n  border: solid 2px green;\n  border-radius: 3px;\n`;\n_c4 = Title;\nconst StackItem = styled.li`\n  width: 100%;\n  min-height: 50px;\n  background-color: ${props => props.stack ? \"rgba(255, 255, 255, 0.5)\" : null};\n  padding: 10px;\n  font-size: 18px;\n  transition: all 0.3s;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n_c5 = StackItem;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"StackList\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"DividStack\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"StackItem\");","map":{"version":3,"names":["React","useEffect","useState","styled","frontend","backend","useDispatch","useSelector","selectStack","jsxDEV","_jsxDEV","StackList","_s2","_s","$RefreshSig$","selectedStack","setSelectedStack","stack","state","frontStack","backStack","dispatch","handleSelectStack","Container","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","DividStack","Object","keys","map","StackItem","onClick","_c","div","_c2","ul","_c3","p","_c4","li","props","_c5","$RefreshReg$"],"sources":["/Users/choegilang/Documents/GitHub/code-container/src/components/common/StackList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { styled } from \"styled-components\";\nimport { frontend, backend } from \"../../constant/stackList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectStack } from \"../../redux/actions/stack\";\nimport { RootState } from \"../../redux/store/store\";\n\ntype StackProp = {\n  stack: boolean;\n};\n\nexport default function StackList() {\n  const [selectedStack, setSelectedStack] = useState<string>(\"\");\n\n  useEffect(() => {\n    const stack = useSelector((state: RootState) => state.stack.stack);\n\n    setSelectedStack(stack);\n  }, []);\n\n  // 스택 모음\n  const frontStack = frontend;\n  const backStack = backend;\n\n  // 스택 선택\n  const dispatch = useDispatch();\n\n  // redux 선택한 stack 저장하기\n  const handleSelectStack = (stack: string) => {\n    dispatch(selectStack(stack));\n  };\n  return (\n    <Container>\n      {/* 프론트엔드 목록 */}\n      <Title>FRONTEND</Title>\n      <DividStack>\n        {Object.keys(frontStack).map((stack) => (\n          <StackItem\n            key={stack}\n            onClick={() => handleSelectStack(stack)}\n            stack={selectedStack === stack}\n          >\n            {frontStack[stack]}\n          </StackItem>\n        ))}\n      </DividStack>\n      {/* 백엔드 목록 */}\n      <Title>BACKEND</Title>\n      <DividStack>\n        {Object.keys(backStack).map((stack) => (\n          <StackItem\n            key={stack}\n            onClick={() => handleSelectStack(stack)}\n            stack={selectedStack === stack}\n          >\n            {backStack[stack]}\n          </StackItem>\n        ))}\n      </DividStack>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  color: white;\n  border-right: solid 3px rgba(255, 255, 255, 0.4);\n`;\n\nconst DividStack = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.p`\n  width: 100%;\n  height: 30px;\n  padding: 20px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  letter-spacing: 2px;\n  font-size: 21px;\n  font-weight: bold;\n  border: solid 2px green;\n  border-radius: 3px;\n`;\n\nconst StackItem = styled.li<StackProp>`\n  width: 100%;\n  min-height: 50px;\n  background-color: ${(props) =>\n    props.stack ? \"rgba(255, 255, 255, 0.5)\" : null};\n  padding: 10px;\n  font-size: 18px;\n  transition: all 0.3s;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}