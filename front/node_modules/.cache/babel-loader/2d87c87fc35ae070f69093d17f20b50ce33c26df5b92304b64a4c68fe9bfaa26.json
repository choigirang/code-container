{"ast":null,"code":"var _jsxFileName = \"/Users/choegilang/Documents/GitHub/code-container/src/components/common/StackList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { styled } from \"styled-components\";\nimport { frontend, backend } from \"../../constant/stackList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectStack } from \"../../redux/actions/stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StackList() {\n  _s();\n  const selectedStack = useSelector(state => state.stack.stack);\n\n  // 스택 모음\n  const frontStack = frontend;\n  const backStack = backend;\n\n  // 스택 선택\n  const dispatch = useDispatch();\n\n  // redux 선택한 stack 저장하기\n  const handleSelectStack = stack => {\n    dispatch(selectStack(stack));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"FRONTEND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DividStack, {\n      children: Object.keys(frontStack).map(stack => /*#__PURE__*/_jsxDEV(StackItem, {\n        onClick: () => handleSelectStack(stack),\n        stack: selectedStack === stack,\n        children: frontStack[stack]\n      }, stack, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"BACKEND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DividStack, {\n      children: Object.keys(backStack).map(stack => /*#__PURE__*/_jsxDEV(StackItem, {\n        onClick: () => handleSelectStack(stack),\n        stack: selectedStack === stack,\n        children: backStack[stack]\n      }, stack, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(StackList, \"kgzOeru3XKwkVErhoQOYWFvVgns=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = StackList;\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  color: white;\n  border-right: solid 3px rgba(255, 255, 255, 0.4);\n`;\n\n// 스택 목록\n_c2 = Container;\nconst DividStack = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c3 = DividStack;\nconst Title = styled.p`\n  width: 100%;\n  height: 30px;\n  padding: 20px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  letter-spacing: 2px;\n  font-size: 21px;\n  font-weight: bold;\n  border: solid 2px green;\n  border-radius: 3px;\n`;\n\n// 개별 스택\n_c4 = Title;\nconst StackItem = styled.li`\n  width: 100%;\n  min-height: 50px;\n  background-color: ${props => props.stack ? \"rgba(255, 255, 255, 0.5)\" : null};\n  padding: 10px;\n  font-size: 18px;\n  transition: all 0.3s;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n_c5 = StackItem;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"StackList\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"DividStack\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"StackItem\");","map":{"version":3,"names":["React","styled","frontend","backend","useDispatch","useSelector","selectStack","jsxDEV","_jsxDEV","StackList","_s","selectedStack","state","stack","frontStack","backStack","dispatch","handleSelectStack","Container","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","DividStack","Object","keys","map","StackItem","onClick","_c","div","_c2","ul","_c3","p","_c4","li","props","_c5","$RefreshReg$"],"sources":["/Users/choegilang/Documents/GitHub/code-container/src/components/common/StackList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { styled } from \"styled-components\";\nimport { frontend, backend } from \"../../constant/stackList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectStack } from \"../../redux/actions/stack\";\nimport { RootState } from \"../../redux/store/store\";\n\ntype StackProp = {\n  stack: boolean;\n};\n\nexport default function StackList() {\n  const selectedStack = useSelector((state: RootState) => state.stack.stack);\n\n  // 스택 모음\n  const frontStack = frontend;\n  const backStack = backend;\n\n  // 스택 선택\n  const dispatch = useDispatch();\n\n  // redux 선택한 stack 저장하기\n  const handleSelectStack = (stack: string) => {\n    dispatch(selectStack(stack));\n  };\n  return (\n    <Container>\n      {/* 프론트엔드 목록 */}\n      <Title>FRONTEND</Title>\n      <DividStack>\n        {Object.keys(frontStack).map((stack) => (\n          <StackItem\n            key={stack}\n            onClick={() => handleSelectStack(stack)}\n            stack={selectedStack === stack}\n          >\n            {frontStack[stack]}\n          </StackItem>\n        ))}\n      </DividStack>\n      {/* 백엔드 목록 */}\n      <Title>BACKEND</Title>\n      <DividStack>\n        {Object.keys(backStack).map((stack) => (\n          <StackItem\n            key={stack}\n            onClick={() => handleSelectStack(stack)}\n            stack={selectedStack === stack}\n          >\n            {backStack[stack]}\n          </StackItem>\n        ))}\n      </DividStack>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  color: white;\n  border-right: solid 3px rgba(255, 255, 255, 0.4);\n`;\n\n// 스택 목록\nconst DividStack = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst Title = styled.p`\n  width: 100%;\n  height: 30px;\n  padding: 20px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  letter-spacing: 2px;\n  font-size: 21px;\n  font-weight: bold;\n  border: solid 2px green;\n  border-radius: 3px;\n`;\n\n// 개별 스택\nconst StackItem = styled.li<StackProp>`\n  width: 100%;\n  min-height: 50px;\n  background-color: ${(props) =>\n    props.stack ? \"rgba(255, 255, 255, 0.5)\" : null};\n  padding: 10px;\n  font-size: 18px;\n  transition: all 0.3s;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}